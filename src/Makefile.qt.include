# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

bin_PROGRAMS += qt/motacoin-qt

if BUILD_BITCOIN_GUI
  bin_PROGRAMS += motacoin-gui
endif

EXTRA_LIBRARIES += qt/libmotacoinqt.a

# bitcoin qt core #
include Makefile.qt_locale.include

QT_DEFINES = \
  -DQT_GUI \
  -DBOOST_THREAD_USE_LIB \
  -DBOOST_SPIRIT_THREADSAFE

QT_FORMS_UI = \
  qt/forms/aboutdialog.ui \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/blockbrowser.ui \
  qt/forms/charitydialog.ui \
  qt/forms/chatwindow.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/qrcodedialog.ui \
  qt/forms/rpcconsole.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/statisticspage.ui \
  qt/forms/transactiondescdialog.ui

QT_MOC_CPP = \
  qt/moc_aboutdialog.cpp \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_bitcoin.cpp \
  qt/moc_bitcoinaddressvalidator.cpp \
  qt/moc_bitcoinamountfield.cpp \
  qt/moc_bitcoingui.cpp \
  qt/moc_blockbrowser.cpp \
  qt/moc_charitydialog.cpp \
  qt/moc_chatwindow.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_monitoreddatamapper.cpp \
  qt/moc_notificator.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_qcomboboxfiltercoins.cpp \
  qt/moc_qcustomplot.cpp \
  qt/moc_qrcodedialog.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_serveur.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_statisticspage.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_walletmodel.cpp

BITCOIN_MM = \
  qt/macdockiconhandler.mm

QT_MOC = \
  qt/bitcoin.moc \
  qt/bitcoinamountfield.moc \
  qt/callback.moc \
  qt/intro.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_bitcoin.cpp
QT_QRC = qt/bitcoin.qrc
QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp
QT_QRC_LOCALE = qt/bitcoin_locale.qrc

BITCOIN_QT_H = \
  qt/aboutdialog.h \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bitcoin.h \
  qt/bitcoinaddressvalidator.h \
  qt/bitcoinamountfield.h \
  qt/bitcoingui.h \
  qt/bitcoinunits.h \
  qt/blockbrowser.h \
  qt/charitydialog.h \
  qt/chatwindow.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/macdockiconhandler.h \
  qt/monitoreddatamapper.h \
  qt/notificator.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/qcomboboxfiltercoins.h \
  qt/qcustomplot.h \
  qt/qrcodedialog.h \
  qt/qtipcserver.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/serveur.h \
  qt/signverifymessagedialog.h \
  qt/statisticspage.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/walletmodel.h

RES_FONTS = 
# T \
# T   qt/res/fonts/RobotoMono-Bold.ttf

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/MotaCoin.ico \
  qt/res/icons/MotaCoin.png \
  qt/res/icons/block.png \
  qt/res/icons/ccex.png \
  qt/res/icons/circuit.png \
  qt/res/icons/MotaCoin-256.png \
  qt/res/icons/connect0_16.png \
  qt/res/icons/connect1_16.png \
  qt/res/icons/connect2_16.png \
  qt/res/icons/connect3_16.png \
  qt/res/icons/connect4_16.png \
  qt/res/icons/cryptopia.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/discord.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/face.png \
  qt/res/icons/filesave.png \
  qt/res/icons/forums.png \
  qt/res/icons/history.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/maplechange.png \
  qt/res/icons/overview.png \
  qt/res/icons/qrcode.png \
  qt/res/icons/quit.png \
  qt/res/icons/receive.png \
  qt/res/icons/reddit.png \
  qt/res/icons/remove.png \
  qt/res/icons/send.png \
  qt/res/icons/social.png \
  qt/res/icons/staking_off.png \
  qt/res/icons/staking_on.png \
  qt/res/icons/stats.png \
  qt/res/icons/synced.png \
  qt/res/icons/telegram.png \
  qt/res/icons/MotaCoin-16.png \
  qt/res/icons/tradesatoshi.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/twitter.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/yobit.png \
  qt/res/icons/youtube.png \
  qt/res/icons/MotaCoin-Yuno.png

BITCOIN_QT_BASE_CPP = \
  qt/bitcoin.cpp \
  qt/bitcoinaddressvalidator.cpp \
  qt/bitcoinamountfield.cpp \
  qt/bitcoingui.cpp \
  qt/bitcoinunits.cpp \
  qt/clientmodel.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/monitoreddatamapper.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/qcustomplot.cpp \
  qt/qtipcserver.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/serveur.cpp \
  qt/statisticspage.cpp

#BITCOIN_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp

BITCOIN_QT_WALLET_CPP = \
  qt/aboutdialog.cpp \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/blockbrowser.cpp \
  qt/charitydialog.cpp \
  qt/chatwindow.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/editaddressdialog.cpp \
  qt/overviewpage.cpp \
  qt/qcomboboxfiltercoins.cpp \
  qt/qrcodedialog.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletmodel.cpp

libmotacoinqt_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libmotacoinqt_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(QT_DEFINES)
libmotacoinqt_server_a_CFLAGS = $(AM_CFLAGS) $(PIE_FLAGS) $(QT_DEFINES)
libmotacoinqt_server_a_SOURCES = \
  aes_helper.c \
  blake.c \
  bmw.c \
  cubehash.c \
  echo.c \
  fugue.c \
  groestl.c \
  hamsi.c \
  hamsi_helper.c \
  jh.c \
  keccak.c \
  luffa.c \
  shavite.c \
  simd.c \
  skein.c \
  addrman.cpp \
  alert.cpp \
  bitcoinrpc.cpp \
  bloom.cpp \
  checkpoints.cpp \
  crypter.cpp \
  db.cpp \
  hash.cpp \
  init.cpp \
  irc.cpp \
  kernel.cpp \
  key.cpp \
  keystore.cpp \
  main.cpp \
  miner.cpp \
  net.cpp \
  netbase.cpp \
  noui.cpp \
  pbkdf2.cpp \
  protocol.cpp \
  rpcblockchain.cpp \
  rpcdump.cpp \
  rpcmining.cpp \
  rpcnet.cpp \
  rpcrawtransaction.cpp \
  rpcwallet.cpp \
  script.cpp \
  scrypt.cpp \
  sync.cpp \
  txdb-leveldb.cpp \
  util.cpp \
  wallet.cpp \
  walletdb.cpp \
  util\macros.h \
  $(BITCOIN_CORE_H)

# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libmotacoinqt_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(QT_DEFINES)
libmotacoinqt_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(QT_DEFINES)
libmotacoinqt_util_a_SOURCES = \
  $(BITCOIN_CORE_H)


BITCOIN_QT_CPP = $(BITCOIN_QT_BASE_CPP)
#if TARGET_WINDOWS
#BITCOIN_QT_CPP += $(BITCOIN_QT_WINDOWS_CPP)
#endif
if ENABLE_WALLET
BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_CPP)
endif # ENABLE_WALLET

RES_ANIMATION = $(wildcard $(srcdir)/qt/res/animation/spinner-*.png)

BITCOIN_RC = qt/res/motacoin-qt-res.rc

BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS -DQT_USE_QSTRINGBUILDER

qt_libmotacoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)
qt_libmotacoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS) $(QT_DEFINES)
qt_libmotacoinqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS) $(QT_DEFINES)

qt_libmotacoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_FONTS) $(RES_ICONS) $(RES_ANIMATION)
if TARGET_DARWIN
  qt_libmotacoinqt_a_SOURCES += $(BITCOIN_MM)
endif

nodist_qt_libmotacoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libmotacoinqt_a_OBJECTS) $(qt_motacoin_qt_OBJECTS) $(motacoin_gui_OBJECTS) : | $(QT_MOC)

# bitcoin-qt and bitcoin-gui binaries #
motacoin_qt_cppflags = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QR_CFLAGS) $(QT_DEFINES)
motacoin_qt_cxxflags = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

motacoin_qt_sources =  qt/main.cpp
if TARGET_WINDOWS
  motacoin_qt_sources += $(BITCOIN_RC)
endif
motacoin_qt_ldadd = qt/libmotacoinqt.a $(LIBBITCOINQT_SERVER)
if ENABLE_WALLET
motacoin_qt_ldadd += $(LIBBITCOIN_UTIL) $(LIBBITCOIN_WALLET)
endif
if ENABLE_ZMQ
motacoin_qt_ldadd += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
endif
motacoin_qt_ldadd += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)
motacoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
motacoin_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX

qt_motacoin_qt_CPPFLAGS = $(motacoin_qt_cppflags)
qt_motacoin_qt_CXXFLAGS = $(motacoin_qt_cxxflags)
qt_motacoin_qt_SOURCES = $(motacoin_qt_sources)
qt_motacoin_qt_LDADD = $(motacoin_qt_ldadd)
qt_motacoin_qt_LDFLAGS = $(motacoin_qt_ldflags)
qt_motacoin_qt_LIBTOOLFLAGS = $(motacoin_qt_libtoolflags)

motacoin_gui_CPPFLAGS = $(motacoin_qt_cppflags)
motacoin_gui_CXXFLAGS = $(motacoin_qt_cxxflags)
motacoin_gui_SOURCES = $(motacoin_qt_sources)
motacoin_gui_LDADD = $(motacoin_qt_ldadd)
motacoin_gui_LDFLAGS = $(motacoin_qt_ldflags)
motacoin_gui_LIBTOOLFLAGS = $(motacoin_qt_libtoolflags)

#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

$(srcdir)/qt/bitcoinstrings.cpp: FORCE
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" $(PYTHON) ../share/qt/extract_strings_qt.py $(libmotacoin_server_a_SOURCES) $(libmotacoin_wallet_a_SOURCES) $(libmotacoin_common_a_SOURCES) $(libmotacoin_zmq_a_SOURCES) $(libmotacoin_consensus_a_SOURCES) $(libmotacoin_util_a_SOURCES)

translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) -no-obsolete -I $(srcdir) -locations relative $^ -ts $(srcdir)/qt/locale/bitcoin_en.ts
	@test -n $(LCONVERT) || echo "lconvert is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LCONVERT) -o $(srcdir)/qt/locale/bitcoin_en.xlf -i $(srcdir)/qt/locale/bitcoin_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale --format-version 1 $(@D)/temp_$(<F) > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_FONTS) $(RES_ICONS) $(RES_ANIMATION)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin --format-version 1 $< > $@

CLEAN_QT = $(nodist_qt_libmotacoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_bitcoin_locale.qrc

CLEANFILES += $(CLEAN_QT)

motacoin_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libmotacoinqt_a_OBJECTS) $(qt_motacoin_qt_OBJECTS) qt/motacoin-qt$(EXEEXT) $(libmotacoinqt)

motacoin_qt : qt/motacoin-qt$(EXEEXT)

APK_LIB_DIR = qt/android/libs/$(ANDROID_ARCH)
QT_BASE_VERSION = $(lastword $(shell $(MOC) --version))
QT_BASE_PATH = $(shell find ../depends/sources/ -maxdepth 1 -type f -regex ".*qtbase.*$(QT_BASE_VERSION)\.tar.xz")
QT_BASE_TLD = $(shell tar tf $(QT_BASE_PATH) --exclude='*/*')

motacoin_qt_apk: FORCE
	mkdir -p $(APK_LIB_DIR)
	cp $(dir $(CC))../sysroot/usr/lib/$(host_alias)/libc++_shared.so $(APK_LIB_DIR)
	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/jar/src --strip-components=5
	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/java/src --strip-components=5
	tar xf $(QT_BASE_PATH) -C qt/android/res/ $(QT_BASE_TLD)src/android/java/res --strip-components=5
	cp qt/motacoin-qt $(APK_LIB_DIR)/libbitcoin-qt.so
	cd qt/android && gradle wrapper --gradle-version=6.6.1
	cd qt/android && ./gradlew build

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
